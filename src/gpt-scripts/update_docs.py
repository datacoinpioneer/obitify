import requests
import base64
import os

# GitHub Repository Information
repo_owner = "datacoin-pioneer"  # Replace with your GitHub username or organization
repo_name = "obitify"  # Replace with your GitHub repository name
token = os.getenv('GITHUB_TOKEN')  # GitHub token (set this in your GitHub Actions secrets)
file_path = "docs/requirements.md"  # Path to the markdown file you want to update

# GitHub API endpoint for accessing a file
url = f"https://api.github.com/repos/{repo_owner}/{repo_name}/contents/{file_path}"

# Headers for GitHub API request
headers = {
    'Authorization': f'token {token}',
    'Content-Type': 'application/json'
}

# The content for the markdown file (this would be generated by your AI)
new_content = """
# Functional Requirements for MyApp

## 1. User Authentication
- **Feature**: Users must be able to log in and log out.
- **Requirements**:
  - Login using Google OAuth.
  - Password recovery through email.
  - User role management (Admin, Regular User).
"""

# Convert the markdown content to Base64 (GitHub API requires Base64 encoding for content)
encoded_content = new_content.encode("utf-8")
base64_content = base64.b64encode(encoded_content).decode("utf-8")

# Fetch the current file details to get the SHA value
response = requests.get(url, headers=headers)
if response.status_code == 200:
    file_info = response.json()
    sha = file_info['sha']  # Get the SHA to know which version to update

    # Data to be sent to GitHub API to update the file
    data = {
        "message": "Automated update of requirements document",
        "content": base64_content,
        "sha": sha  # The SHA of the file we're updating
    }

    # Update the file with the new content
    update_response = requests.put(url, json=data, headers=headers)

    if update_response.status_code == 200:
        print("Documentation updated successfully!")
    else:
        print(f"Failed to update documentation: {update_response.status_code}")
else:
    print(f"Failed url: {url}")
    print(f"Failed to fetch file details: {response.status_code}")
